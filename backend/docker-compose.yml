version: "2.0"
services:
    #PHP Service
    backend:
        build:
            context: ./
            dockerfile: backend.dockerfile
        image: backend
        user: "1000:1000"
        container_name: backend
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: backend
            SERVICE_TAGS: dev
        working_dir: /var/www/html/
        volumes:
            - ./:/var/www/html/
            - ./php/backend.ini:/usr/local/etc/php/conf.d/backend.ini
        networks:
            - app-network

    frontend:
        stdin_open: true
        container_name: frontend
        restart: always
        build:
            context: ../frontend
            dockerfile: frontend.dockerfile
        volumes:
            - /app/node_modules
            - ../frontend:/app:cached
        networks:
            - app-network
        environment:
            - CHOKIDAR_USEPOLLING=true
        expose:
            - "80"
        ports:
            - "8080:8080"
            - "8081:8081"

    #Nginx Service
    webserver:
        depends_on:
            - backend
            - frontend
        build:
            context: ./nginx
            dockerfile: nginx.dockerfile
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
        networks:
            - app-network

    #Mysql DB
    mysql:
        image: mysql:8.0
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "33061:3306"
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: notetaker
        volumes:
            - ../mysql:/mysql
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

volumes:
    mysql:
        driver: local
